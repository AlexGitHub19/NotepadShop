<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")


    <link href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300&display=swap&subset=cyrillic" rel="stylesheet">
    <link type="text/css" rel="stylesheet" href="~/Content/bootstrap-grid.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/Site.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/Layout.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/Shared/tabs-control.css" />
    <link type="text/css" rel="stylesheet" href="~/Content/Shared/MenuOverlay.css" />

    @RenderSection("styles", required: false)
    @*

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)
        @Scripts.Render("~/bundles/modernizr")
        <script type="text/javascript" src="~/Scripts/knockout-3.4.2.js"></script>*@
</head>
<body>

    <div class="tokenContainer">
        @Html.AntiForgeryToken()
    </div>

    <div id="layoutConainer">
        <div class="navbar-container">
            <div id="languageContainer" data-bind="css: { 'open' : isLanguagePopupVisible }, event: { mouseover: showLanguagePopup, mouseleave: hideLanguagePopup }">
                @switch ((string)ViewBag.Language)
                {
                    case "en":
                        <div class="flag en-flag">
                        </div>
                        break;
                    case "uk":
                        <div class="flag uk-flag">
                        </div>
                        break;
                    case "ru":
                    default:
                        <div class="flag ru-flag">
                        </div>
                        break;
                }
            </div>
            <div id="shoppingCartImageContainer"
                 data-bind="event: { mouseover: showShoppingCartPopup, mouseout: hideShoppingCartPopup }, click: shoppingCartImageClick">
                <div class="shopping-cart-icon"></div>
                <span data-bind="text: shoppingCartItems().length, visible: shoppingCartItems().length > 0"></span>
            </div>
            <div id="userInfoContainer" data-bind="css: { 'open' : isUserInfoPopupVisible }, event: { mouseover: showUserInfoPopup, mouseleave: hideUserInfoPopup }">

                @if (ViewBag.Email != null)
                {
                    <div class="display-inline height100">
                        <div class="person-icon"></div>
                    </div>

                }
                @if (ViewBag.Email == null)
                {
                    <div class="display-inline height100">
                        <div id="logInBtn" data-bind="click: loginBtnClick"></div>
                    </div>
                }
            </div>
            <div class="menu-btn">
                <span class="menu-btn-first-line"></span>
                <span class="menu-btn-second-line"></span>
                <span class="menu-btn-third-line"></span>
            </div>
        </div>

        @*Menu Overlay*@
        <div class="menu-close-btn">
            <div class="menu-close-btn-layout">
                <span class="close-btn-first-line"></span>
                <span class="close-btn-second-line"></span>
            </div>
        </div>
        <div class="menu-overlay-container">
            <div class="menu-overlay">
            </div>
        </div>
        <div class="ns-menu">
            <div class="ns-menu-item">
                <div class="menu-line-conatiner">
                    <span class="menu-line"></span>
                </div>
                <div class="menu-item-text-container">
                    <a href="~/">Home</a>
                </div>
                <div class="arrow-conatiner first">
                    <span class="arrow"></span>
                </div>
            </div>
            <div class="ns-menu-item">
                <div class="menu-line-conatiner">
                    <span class="menu-line"></span>
                </div>
                <div class="menu-item-text-container">
                    <a href="~/shop">Shop</a>
                </div>
                <div class="arrow-conatiner second">
                    <span class="arrow"></span>
                </div>
            </div>
            <div class="ns-menu-item">
                <div class="menu-line-conatiner">
                    <span class="menu-line"></span>
                </div>
                <div class="menu-item-text-container">
                    <a href="~/profile/personal-info">Delivery info</a>
                </div>
                <div class="arrow-conatiner third">
                    <span class="arrow"></span>
                </div>
            </div>
            <div class="ns-menu-item" data-bind="if: isLoggedIn">
                <div class="menu-line-conatiner">
                    <span class="menu-line"></span>
                </div>
                <div class="menu-item-text-container">
                    <a href="~/profile/personal-info">Personal Info</a>
                </div>
                <div class="arrow-conatiner fourth">
                    <span class="arrow"></span>
                </div>
            </div>
        </div>
        @*Menu Overlay end*@

        <div id="languagePopup" class="popup" data-bind="css: { 'open' : isLanguagePopupVisible }, event: { mouseover: showLanguagePopup, mouseleave: hideLanguagePopup }">
            <div class="language-popup-content popup-content">
                <div class="popup-item-container">
                    @if (((string)ViewBag.Language == "ru"))
                    {
                        <div id="popup-language-uk" class="popup-language-item flag uk-flag"></div>
                        <div id="popup-language-en" class="popup-language-item flag en-flag popup-language-right-item"></div>
                    }
                    @if (((string)ViewBag.Language == "uk"))
                    {
                        <div id="popup-language-ru" class="popup-language-item flag ru-flag"></div>
                        <div id="popup-language-en" class="popup-language-item flag en-flag popup-language-right-item"></div>
                    }
                    @if (((string)ViewBag.Language == "en"))
                    {
                        <div id="popup-language-ru" class="popup-language-item flag ru-flag"></div>
                        <div id="popup-language-uk" class="popup-language-item flag uk-flag popup-language-right-item"></div>
                    }
                </div>
            </div>
        </div>

        <div id="userInfoPopup" class="popup" data-bind="css: { 'open' : isUserInfoPopupVisible }, event: { mouseover: showUserInfoPopup, mouseleave: hideUserInfoPopup }">
            <div class="popup-content">
                <div class="popup-item-container popup-item-logout" data-bind="click: logoutClick">
                    <div class="logout-icon"></div>
                    <div class="popup-item-text">
                        <p>@ViewBag.ResourceManager.GetString("logOutLabel")</p>
                    </div>
                </div>
                <div class="popup-item-user-info">
                    <a href="~/profile/personal-info" class="popup-item-container">
                        <div class="user-info-icon"></div>
                        <div class="popup-item-text">
                            <p>Personal данные</p>
                        </div>
                    </a>
                </div>
                <div class="popup-item-user-orders">
                    <a href="~/profile/orders" class="popup-item-container">
                        <div class="user-orders-icon"></div>
                        <div class="popup-item-text">
                            <p>My заказы</p>
                        </div>
                    </a>                   
                </div>
            </div>
        </div>

        <div id="shoppingCartPopup" class="popup" data-bind="css: { 'open' : isShoppingCartPopupVisible }, event: { mouseover: showShoppingCartPopup, mouseleave: hideShoppingCartPopup }">
            <div class="popup-content">
                <div data-bind="foreach: shoppingCartItems">
                    <div>
                        <img class="shopping-cart-item-image" data-bind="attr: { src: '/Content/Item/Images/' + ImageName }" alt="image can't be loaded" />
                        <p data-bind="text: Name"></p>
                        <p data-bind="text: Price"></p>
                        <div>
                            <i class="material-icons cursor-pointer" data-bind="click: function() { $root.minusQuantity($data) }">remove</i>
                            <input type="text" class="quantity-input" data-bind="textInput: Quantity, event:{'keydown': $root.countInputKeyDown, input: $root.countInputInput}" />
                            <i class="material-icons cursor-pointer" data-bind="click: function() { $root.plusQuantity($data) }">add</i>
                        </div>
                        <a class="waves-effect waves-light btn" data-bind="click: function() { $root.deleteItemFromShoppingCart($data) } ">Delete интернализ</a>
                    </div>
                </div>
                <div data-bind="visible: shoppingCartItems().length > 0">
                    <span>Total cумма: </span>
                    <span data-bind="text: $root.totaShoppingCartlPrice"></span>
                    <br />
                    <button data-bind="click: shoppingCartImageClick">Открыть Cart</button>
                </div>
                <div class="popup-item-container" data-bind="visible: shoppingCartItems().length == 0">
                    <div class="shopping-cart-icon"></div>
                    <div class="popup-item-text">
                        <p>Cart is пустая</p>
                    </div>
                </div>
            </div>
        </div>


        <div id="loginModal" style="display: none" data-bind="visible: isLoginModalVisible">
            <div class="modalContent">
                <div class="ns-tabs">
                    <input type="radio" id="tab1" name="ns-tab-control" checked>
                    <input type="radio" id="tab2" name="ns-tab-control">
                    <ul>
                        <li title="@ViewBag.ResourceManager.GetString("loginLabel")">
                            <label for="tab1" role="button">
                                <span>@ViewBag.ResourceManager.GetString("loginLabel")</span>
                            </label>
                        </li>
                        <li title="@ViewBag.ResourceManager.GetString("registerLabel")">
                            <label for="tab2" role="button">
                                <span>@ViewBag.ResourceManager.GetString("registerLabel")</span>
                            </label>
                        </li>
                    </ul>

                    <div class="ns-tabs-slider"><div class="indicator"></div></div>
                    <div class="ns-tab-content">
                        <section>
                            <div class="input-field">
                                <input id="loginEmailInput" type="text" class="validate" data-bind="textInput: loginEmail">
                                <label for="loginEmailInput">Email</label>
                            </div>
                            <div class="input-field">
                                <input id="loginPasswordInput" type="password" class="validate" data-bind="textInput: loginPasword">
                                <label for="loginPasswordInput">@ViewBag.ResourceManager.GetString("passwordLabel")</label>
                            </div>
                            <div class="authorizationFailedMessageContainer" data-bind="visible: showLoginFailedMessage">
                                <p class="red-text" data-bind="text: loginFailedMessage"></p>
                            </div>
                            <div class="center-container">
                                <button id="sumbitLogInBtn" class="btn btn-small btn-submit  btn-blue" data-bind="visible: !displayLogInPreloader(), enable: submitLoginBtnEnabled">
                                    @ViewBag.ResourceManager.GetString("loginLabel")
                                </button>
                                <div id="logInPreloader" class="small-preloader-holder" data-bind="visible: displayLogInPreloader">
                                    <div class="preloader-wrapper small active">
                                        <div class="spinner-layer spinner-blue-only">
                                            <div class="circle-clipper left">
                                                <div class="circle"></div>
                                            </div><div class="gap-patch">
                                                <div class="circle"></div>
                                            </div><div class="circle-clipper right">
                                                <div class="circle"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                        <section>
                            <div class="input-field">
                                <input id="registerEmailInput" type="email" class="validate" data-bind="textInput: registerEmail">
                                <label for="registerEmailInput">Email</label>
                                <span class="email-validation-msg red-text">@ViewBag.ResourceManager.GetString("incorrectEmailValidation")</span>
                            </div>
                            <div class="input-field">
                                <input id="registerPasswordInput" type="password" data-bind="textInput: registerPasword" class="validate" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$">
                                <label for="registerPasswordInput">@ViewBag.ResourceManager.GetString("passwordLabel")</label>
                                <span class="password-validation-msg red-text">@ViewBag.ResourceManager.GetString("incorrectParrwordValidation")</span>
                            </div>
                            <div class="authorizationFailedMessageContainer" data-bind="visible: showRegisterFailedMessage">
                                <p class="red-text" data-bind="text: registerFailedMessage"></p>
                            </div>
                            <div class="center-container">
                                <a id="sumbitRegisterBtn" class="btn btn-small btn-submit btn-blue" data-bind="visible: !displayRegisterPreloader()">
                                    @ViewBag.ResourceManager.GetString("registerLabel")
                                </a>
                                <div id="registrationPreloader" class="small-preloader-holder" data-bind="visible: displayRegisterPreloader">
                                    <div class="preloader-wrapper small active">
                                        <div class="spinner-layer spinner-blue-only">
                                            <div class="circle-clipper left">
                                                <div class="circle"></div>
                                            </div><div class="gap-patch">
                                                <div class="circle"></div>
                                            </div><div class="circle-clipper right">
                                                <div class="circle"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
            <button class="closeModalBtn" data-bind="click: closeloginPopupClick">Close</button>
        </div>

        <div id="shoppingCart" style="display: none" data-bind="visible: isShoppingCartVisible">
            <div class="modalContent">
                <div data-bind="foreach: shoppingCartItems">
                    <div>
                        <img class="shopping-cart-item-image" data-bind="attr: { src: '/Content/Item/Images/' + ImageName }" alt="image can't be loaded" />
                        <p data-bind="text: Name"></p>
                        <p data-bind="text: Price"></p>
                        <div>
                            <i class="material-icons cursor-pointer" data-bind="click: function() { $root.minusQuantity($data) }">remove</i>
                            <input type="text" class="quantity-input" data-bind="textInput: Quantity, event:{'keydown': $root.countInputKeyDown, input: $root.countInputInput}" />
                            <i class="material-icons cursor-pointer" data-bind="click: function() { $root.plusQuantity($data) }">add</i>
                        </div>
                        <a class="waves-effect waves-light btn" data-bind="click: function() { $root.deleteItemFromShoppingCart($data) } ">Delete интернализ</a>
                    </div>
                </div>
                <div>
                    <span>Total cумма: </span>
                    <span data-bind="text: $root.totaShoppingCartlPrice"></span>
                </div>
                <hr />
                <div class="contact-info">
                    <p>Contact информация</p>
                    <div class="input-field">
                        <input id="shoppingCartNameInput" type="text" data-bind="textInput: shoppingCartName, event:{'focusin': shoppingCartNameInputFocusIn }">
                        <label for="shoppingCartNameInput">Name/Имя</label>
                        <p class="validation-message" style="display: none;" data-bind="visible: isShoppingCartNameEmpty">Enter имя</p>
                    </div>
                    <div class="input-field">
                        <input id="shoppingCartSurnameInput" type="text" data-bind="textInput: shoppingCartSurname, event:{'focusin': shoppingCartSurnameInputFocusIn }">
                        <label for="shoppingCartSurnameInput">Surname/Фамилия</label>
                        <p class="validation-message" style="display: none;" data-bind="visible: isShoppingCartSurnameEmpty">Enter фамилию</p>
                    </div>
                    <div class="input-field">
                        <input id="shoppingCartPhoneInput" type="text" data-bind="textInput: shoppingCartPhone, event:{'focusin': shoppingCartPhoneInputFocusIn }"
                               class="ns-phone-input" placeholder="+38(0XX)-XX-XX-XXX">
                        <label for="shoppingCartPhoneInput">Phone/Телефон</label>
                        <p class="validation-message" style="display: none;" data-bind="visible: isShoppingCartPhoneEmpty">Enter телефон</p>
                        <p class="validation-message" style="display: none;" data-bind="visible: !isShoppingCartPhoneValid">телефон is entered incorrectly</p>
                    </div>
                    <div class="input-field">
                        <input id="shoppingCartEmailInput" type="text" data-bind="textInput: shoppingCartEmail">
                        <label for="shoppingCartEmailInput">E-mail</label>
                    </div>
                </div>
                <hr />
                <div class="delivery-info">
                    <p>Delivery информация</p>
                    <div><input type="radio" name="deliveryTypeRadioGroup" value="novaPoshta" data-bind="checked: shoppingCartDeliveryType" />Nova Poshta достав</div>
                    <div><input type="radio" name="deliveryTypeRadioGroup" value="self" data-bind="checked: shoppingCartDeliveryType" />Самовыв</div>
                    <div style="display: none;" data-bind="visible: shoppingCartDeliveryType() === 'novaPoshta'">
                        <div class="input-field">
                            <input id="shoppingCartCityInput" type="text" data-bind="textInput: shoppingCartCity, event:{'focusin': shoppingCartCityInputFocusIn }">
                            <label for="shoppingCartCityInput">City/Город</label>
                            <p class="validation-message" style="display: none;" data-bind="visible: isShoppingCartCityEmpty">Enter город</p>
                        </div>
                        <div class="input-field">
                            <input id="shoppingCartPostDepartmentInput" type="text"
                                   data-bind="textInput: shoppingCartPostDepartment, event:{'keydown': postDepartmentInputKeyDown, 'focusin': shoppingCartPostDepartmentInputFocusIn }"
                                   class="post-department-input">
                            <label for="shoppingCartPostDepartmentInput">Nova Posta deaprtment/Отделение</label>
                            <p class="validation-message" style="display: none;" data-bind="visible: isShoppingCartPostDepartmentEmpty">Enter отделение</p>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="payment-info">
                    <div><input type="radio" name="paymentTypeRadioGroup" value="cart" data-bind="checked: shoppingCartPaymentType" />Payment на карту</div>
                    <div><input type="radio" name="paymentTypeRadioGroup" value="cash" data-bind="checked: shoppingCartPaymentType"/>Оплата Cash</div>
                </div>
                <a class="waves-effect waves-light btn" data-bind="click: makeOrderClick">Order/заказать</a>
                <button class="closeModalBtn" data-bind="click: shoppingCartCloseBtnClick">Close</button>
            </div>
        </div>

        <div class="session-expired-window" style="display: none;" data-bind="visible: displaySessionExpiredWindow">
            <div>
                <p>Your session is expired. Обновите страницу для дальнейшей работы</p>
            </div>
        </div>

    </div>


    <div class="body-content">
        @RenderBody()
    </div>

    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript" src="~/Scripts/knockout-3.4.2.js"></script>

    <script type="text/javascript" src="~/Scripts/Shared/Layout.js"></script>
    <script type="text/javascript" src="~/Scripts/Shared/PhoneInput.js"></script>
    <script type="text/javascript" src="~/Scripts/Shared/MenuOverlay.js"></script>
    @RenderSection("scripts", required: false)
</body>
</html>

<script type="text/javascript">
    var email = "@ViewBag.Email";
</script>
